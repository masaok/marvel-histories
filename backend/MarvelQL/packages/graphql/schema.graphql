scalar DateTime

type Query {
	"""
	Fetches a list of characters.
	"""
	characters(
		where: CharacterWhereInput
		"""
		Skips the specified number of resources in the result set.
		"""
		offset: Int
		"""
		Limit the result set to the specified number of resources.
		"""
		limit: Int
		orderBy: CharacterOrderBy
	): [Character!]
	"""
	Fetches a single character by id.
	"""
	getCharacter(where: CharacterWhereInput): Character
	"""
	Fetches a list of comics.
	"""
	comics(
		where: ComicWhereInput
		orderBy: ComicOrderBy
		"""
		Skips the specified number of resources in the result set.
		"""
		offset: Int
		"""
		Limit the result set to the specified number of resources.
		"""
		limit: Int
	): [Comic!]
	"""
	Fetches a single comic by id.
	"""
	getComic(where: ComicWhereInput): Comic
	"""
	Fetches a list of creators.
	"""
	creators(
		where: CreatorWhereInput
		orderBy: CreatorOrderBy
		"""
		Skips the specified number of resources in the result set.
		"""
		offset: Int
		"""
		Limit the result set to the specified number of resources.
		"""
		limit: Int
	): [Creator!]
	"""
	Fetches a single creator by id.
	"""
	getCreator(where: CreatorWhereInput): Creator
	"""
	Fetches a list of events.
	"""
	events(
		where: EventsWhereInput
		orderBy: EventsOrderBy
		"""
		Skips the specified number of resources in the result set.
		"""
		offset: Int
		"""
		Limit the result set to the specified number of resources.
		"""
		limit: Int
	): [Event!]
	"""
	Fetches a single event by id.
	"""
	getEvent(where: EventsWhereInput): Event
	"""
	Fetches a list of series.
	"""
	series(
		where: SeriesWhereInput
		orderBy: SeriesOrderBy
		"""
		Skips the specified number of resources in the result set.
		"""
		offset: Int
		"""
		Limit the result set to the specified number of resources.
		"""
		limit: Int
	): [Series!]
	"""
	Fetches a single series by id.
	"""
	getSeries(where: SeriesWhereInput): Series
	"""
	Fetches a list of stories.
	"""
	stories(
		where: StoriesWhereInput
		orderBy: StoriesOrderBy
		"""
		Skips the specified number of resources in the result set.
		"""
		offset: Int
		"""
		Limit the result set to the specified number of resources.
		"""
		limit: Int
	): [Story!]
	"""
	Fetches a single story by id.
	"""
	getStory(where: StoriesWhereInput): Story
	engineInfo: String
}
"""
Optional filters for characters. See notes on individual inputs below.
"""
input CharacterWhereInput {
	"""
	Returns only characters matching the specified id
	"""
	id: Int
	"""
	Returns only characters matching the specified full character name (e.g. Spider-Man).
	"""
	name: String
	"""
	Returns characters with names that begin with the specified string (e.g. Sp).
	"""
	nameStartsWith: String
	"""
	Returns only characters which have been modified since the specified date.
	"""
	modifiedSince: String
	"""
	Returns only characters which appear in the specified comics (accepts a comma-separated list of ids).
	"""
	comics: [ID!]
	"""
	Returns only characters which appear the specified series (accepts a comma-separated list of ids).
	"""
	series: [ID!]
	"""
	Returns only characters which appear in the specified events (accepts a comma-separated list of ids).
	"""
	events: [ID!]
	"""
	Returns only characters which appear the specified stories (accepts a comma-separated list of ids).
	"""
	stories: [ID!]
}
"""
Orders the result set by a field or fields. Multiple values are given priority in the order in which they are passed.
"""
enum CharacterOrderBy {
	"""
	Returns character in A-Z order (i.e 3-D Man, A-Bomb (HAS), A.I.M, etc...)
	"""
	name_asc
	"""
	Returns character in Z-A order (i.e , etc...)
	"""
	name_desc
	"""
	Returns character's modification date in ascending order
	"""
	modified_asc
	"""
	Returns character's modification date in descending order
	"""
	modified_desc
}
"""
Filter the series by publication frequency type.
"""
enum SeriesType {
	"""
	Filter the series with a collection publication frequency.
	"""
	collection
	"""
	Filter the series with a one shot publication frequency.
	"""
	one_shot
	"""
	Filter the series with a limited publication frequency.
	"""
	limited
	"""
	Filter the series with a ongoing publication frequency.
	"""
	ongoing
}
"""
Return only series containing one or more comics with the specified format.
"""
enum ComicFormat {
	"""
	Return only series containing one or more comics with the specified format of a magazine.
	"""
	magazine
	"""
	Return only series containing one or more comics with the specified format of a trade paperback.
	"""
	trade_paperback
	"""
	Return only series containing one or more comics with the specified format of a hardcover.
	"""
	hardcover
	"""
	Return only series containing one or more comics with the specified format of a digest.
	"""
	digest
	"""
	Return only series containing one or more comics with the specified format of a graphic novel.
	"""
	graphic_novel
	"""
	Return only series containing one or more comics with the specified format of a comic.
	"""
	comic
	"""
	Return only series containing one or more comics with the specified format of a digital comic.
	"""
	digital_comic
	"""
	Return only series containing one or more comics with the specified format of an infinite comic.
	"""
	infinite_comic
}

"""
Filter by the issue format type (comic or collection).
"""
enum ComicFormatType {
	comic
	collection
}

"""
Returns a resource within a predefined date range.
"""
enum DateDescriptor {
	lastWeek
	thisWeek
	nextWeek
	thisMonth
}

"""
Optional filters for comics. See notes on individual inputs below.
"""
input ComicWhereInput {
	"""
	Filter by the issue format (e.g. comic, digital comic, hardcover).
	"""
	format: ComicFormat
	"""
	Filter by the issue format type (comic or collection).
	"""
	formatType: ComicFormatType
	"""
	Exclude variants (alternate covers, secondary printings, director's cuts, etc.) from the result set.
	"""
	noVariants: Boolean
	"""
	Return comics within a predefined date range.
	"""
	dateDescriptor: DateDescriptor
	"""
	Returns comics within a predefined date range. Dates must be specified as date1,date2 (e.g. 2013-01-01,2013-01-02). Dates are preferably formatted as YYYY-MM-DD but may be sent as any common date format.
	"""
	dateRange: Int
	"""
	Filter by diamond code.
	"""
	diamondCode: String
	"""
	Filter by digital comic id.
	"""
	digitalId: Int
	"""
	Filter by UPC.
	"""
	upc: String
	"""
	Filter by ISBN.
	"""
	isbn: String
	"""
	Filter by EAN.
	"""
	ean: String
	"""
	Filter by ISSN.
	"""
	issn: String
	"""
	Include only results which are available digitally.
	"""
	hasDigitalIssue: Boolean
	"""
	Return only comics which have been modified since the specified date.
	"""
	modifiedSince: DateTime
	"""
	Return only comics which feature work by the specified creators (accepts a comma-separated list of ids).
	"""
	creators: [ID!]
	"""
	Return only comics which feature the specified characters (accepts a comma-separated list of ids).
	"""
	characters: [ID!]
	"""
	Return only comics which are part of the specified series (accepts a comma-separated list of ids).
	"""
	series: [ID!]
	"""
	Return only comics which take place in the specified events (accepts a comma-separated list of ids).
	"""
	events: [ID!]
	"""
	Return only comics which contain the specified stories (accepts a comma-separated list of ids).
	"""
	stories: [ID!]
	"""
	Return only comics in which the specified characters appear together (for example in which BOTH Spider-Man and Wolverine appear). Accepts a comma-separated list of ids.
	"""
	sharedAppearances: [ID!]
	"""
	Return only comics in which the specified creators worked together (for example in which BOTH Stan Lee and Jack Kirby did work). Accepts a comma-separated list of ids.
	"""
	collaborators: [ID!]
}
"""
Order the result set by a field or fields. Multiple values are given priority in the order in which they are passed.
"""
enum ComicOrderBy {
	focDate_asc
	onSaleDate_asc
	title_asc
	issueNumber_asc
	modified_asc
	focDate_desc
	onSaleDate_desc
	title_desc
	issueNumber_desc
	modified_desc
}

"""
Optional filters for creators. See notes on individual inputs below.
"""
input CreatorWhereInput {
	"""
	Filter by creator first name (e.g. Brian).
	"""
	firstName: String
	"""
	Filter by creator middle name (e.g. Michael).
	"""
	middleName: String
	"""
	Filter by creator last name (e.g. Bendis).
	"""
	lastName: String
	"""
	Filter by suffix or honorific (e.g. Jr., Sr.).
	"""
	suffix: String
	"""
	Filter by creator names that match critera (e.g. B, St L).
	"""
	nameStartsWith: String
	"""
	Filter by creator first names that match critera (e.g. B, St L).
	"""
	firstNameStartsWith: String
	"""
	Filter by creator middle names that match critera (e.g. Mi).
	"""
	middleNameStartsWith: String
	"""
	Filter by creator last names that match critera (e.g. Ben).
	"""
	lastNameStartsWith: String
	"""
	Return only creators which have been modified since the specified date.
	"""
	modifiedSince: DateTime
	"""
	Return only creators who worked on in the specified comics (accepts a comma-separated list of ids).
	"""
	comics: [ID!]
	"""
	Return only creators who worked on the specified series (accepts a comma-separated list of ids).
	"""
	series: [ID!]
	"""
	Return only creators who worked on comics that took place in the specified events (accepts a comma-separated list of ids).
	"""
	events: [ID!]
	"""
	Return only creators who worked on the specified stories (accepts a comma-separated list of ids).
	"""
	stories: [ID!]
}

"""
Order the result set by a field or fields. Multiple values are given priority in the order in which they are passed.
"""
enum CreatorOrderBy {
	lastName_asc
	firstName_asc
	middleName_asc
	suffix_asc
	modified_asc
	lastName_desc
	firstName_desc
	middleName_desc
	suffix_desc
	modified_desc
}

"""
Optional filters for events. See notes on individual inputs below.
"""
input EventsWhereInput {
	"""
	Return only events which match the specified name.
	"""
	name: String
	"""
	Return events with names that begin with the specified string (e.g. Sp).
	"""
	nameStartsWith: String
	"""
	Return only events which have been modified since the specified date.
	"""
	modifiedSince: DateTime
	"""
	Return only events which feature work by the specified creators (accepts a comma-separated list of ids).
	"""
	creators: [ID!]
	"""
	Return only events which feature the specified characters (accepts a comma-separated list of ids).
	"""
	characters: [ID!]
	"""
	Return only events which are part of the specified series (accepts a comma-separated list of ids).
	"""
	series: [ID!]
	"""
	Return only events which take place in the specified comics (accepts a comma-separated list of ids).
	"""
	comics: [ID!]
}
"""
Order the result set by a field or fields. Multiple values are given priority in the order in which they are passed.
"""
enum EventsOrderBy {
	name_asc
	startDate_asc
	modified_asc
	name_desc
	startDate_desc
	modified_desc
}

"""
Optional filters for series. See notes on individual inputs below.
"""
input SeriesWhereInput {
	"""
	Return only series matching the specified title.
	"""
	title: String
	"""
	Return series with titles that begin with the specified string (e.g. Sp).
	"""
	titleStartsWith: String
	"""
	Return only series matching the specified start year.
	"""
	startYear: Int
	"""
	Return only series which have been modified since the specified date.
	"""
	modifiedSince: DateTime
	"""
	Return only series containing one or more comics with the specified format.
	"""
	contains: ComicFormat
	"""
	Filter the series by publication frequency type.
	"""
	seriesType: SeriesType
	"""
	Return only series which contain the specified comics (accepts a comma-separated list of ids).
	"""
	comics: [ID!]
	"""
	Return only series which contain the specified stories (accepts a comma-separated list of ids).
	"""
	stories: [ID!]
	"""
	Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).
	"""
	events: [ID!]
	"""
	Return only series which feature work by the specified creators (accepts a comma-separated list of ids).
	"""
	creators: [ID!]
	"""
	Return only series which feature the specified characters (accepts a comma-separated list of ids).
	"""
	characters: [ID!]
}

"""
Order the result set by a field or fields. Multiple values are given priority in the order in which they are passed.
"""
enum SeriesOrderBy {
	title_asc
	modified_asc
	startYear_asc
	title_desc
	modified_desc
	startYear_desc
}

"""
Optional filters for stories. See notes on individual inputs below.
"""
input StoriesWhereInput {
	modifiedSince: DateTime
	comics: [ID!]
	series: [ID!]
	events: [ID!]
	creators: [ID!]
	characters: [ID!]
}

"""
Order the result set by a field or fields. Multiple values are given priority in the order in which they are passed.
"""
enum StoriesOrderBy {
	id_asc
	id_desc
	modified_asc
	modified_desc
}

"""
An interface for common patterns found from the Marvel API
"""
interface MarvelNode {
	"""
	A unique ID to a particular marvel resource.
	"""
	id: ID
	"""
	The canonical URL identifier for a resource.
	"""
	resourceURI: String
	"""
	The url path for a canonical photo to the resource
	"""
	thumbnail: String
	"""
	A date for which the resource has been modified
	"""
	modified: String
}

"""
Marvel Summary types for displaying relational types (i.e characters featured within a comic )
"""
type Summary {
	"""
	The canonical URL identifier for this summary resource.
	"""
	resourceURI: String
	name: String
	role: String
	type: String
}

"""
A character resource in the Marvel universe
"""
type Character implements MarvelNode {
	"""
	The unique ID of the character resource.
	"""
	id: ID
	"""
	The name of the character.
	"""
	name: String
	"""
	The url path of to the image related to the character.
	"""
	thumbnail: String
	"""
	A short bio or description of the character.
	"""
	description: String
	"""
	The date the resource was most recently modified.
	"""
	modified: String
	"""
	The canonical URL identifier for this resource.
	"""
	resourceURI: String
	"""
	A set of public web site URLs for the resource.
	"""
	urls: [MarvelUrl!]
	"""
	Lists of comics filtered by a character id.
	"""
	comics: [Comic!]
	"""
	Lists of series filtered by a character id.
	"""
	series: [Summary!]
	"""
	Lists of events filtered by a character id.
	"""
	events: [Summary!]
	"""
	Lists of stories filtered by a character id.
	"""
	stories: [Summary!]
}

"""
A comic resource within the Marvel Universe
"""
type Comic implements MarvelNode {
	"""
	The unique ID of the comic resource.
	"""
	id: ID
	"""
	The ID of the digital comic representation of this comic. Will be 0 if the comic is not available digitally.
	"""
	digitalId: Int
	"""
	The canonical title of the comic.
	"""
	title: String
	"""
	The number of the issue in the series (will generally be 0 for collection formats).
	"""
	issueNumber: Int
	"""
	If the issue is a variant (e.g. an alternate cover, second printing, or director’s cut), a text description of the variant.
	"""
	variantDescription: String
	"""
	The preferred description of the comic.
	"""
	description: String
	"""
	The date the resource was most recently modified.
	"""
	modified: String
	"""
	The ISBN for the comic (generally only populated for collection formats).
	"""
	isbn: String
	"""
	The UPC barcode number for the comic (generally only populated for periodical formats)
	"""
	upc: String
	"""
	The Diamond code for the comic.
	"""
	diamondCode: String
	"""
	The EAN barcode for the comic.
	"""
	ean: String
	"""
	The ISSN barcode for the comic.
	"""
	issn: String
	"""
	The publication format of the comic e.g. comic, hardcover, trade paperback.
	"""
	format: String
	"""
	A set of descriptive text blurbs for the comic.
	"""
	textObjects: [TextObject!]
	"""
	The canonical URL identifier for this resource.
	"""
	resourceURI: String
	"""
	A set of public web site URLs for the resource.
	"""
	urls: [MarvelUrl!]
	"""
	A list of series (Summary Types) to this comic
	"""
	series: Summary
	"""
	A list of variant issues for this comic (includes the "original" issue if the current issue is a variant)
	"""
	variants: [Summary!]
	"""
	A list of collections which include this comic (will generally be empty if the comic's format is a collection).
	"""
	collections: [Summary!]
	"""
	A list of issues collected in this comic (will generally be empty for periodical formats such as "comic" or magazine").
	"""
	collectedIssues: [Summary!]
	"""
	A list of key dates for this comic.
	"""
	dates: [ComicDate!]
	"""
	A list of prices for this comic.
	"""
	prices: [ComicPrice!]
	"""
	The url path of to the image related to the comic.
	"""
	thumbnail: String
	"""
	A list of promotional images associated with this comic.
	"""
	images: [ComicImage!]
	"""
	A list of characters (Summary Types) to this comic
	"""
	characters: [Summary!]
	"""
	A list of events (Summary Types) related to this comic
	"""
	events: [Summary!]
	"""
	A list of stories (Summary Types) related to this comic
	"""
	stories: [Summary!]
	"""
	A list of creators (Summary Types) related to this comic
	"""
	creators: [Summary!]
}

"""
A creator resource within the Marvel Universe
"""
type Creator implements MarvelNode {
	"""
	The unique ID of the creator resource.
	"""
	id: ID
	"""
	The first name of the creator
	"""
	firstName: String
	"""
	The middle name of the creator
	"""
	middleName: String
	"""
	The last name of the creator
	"""
	lastName: String
	"""
	The suffix of the creator
	"""
	suffix: String
	"""
	The full name of the creator
	"""
	fullName: String
	"""
	The date for which the creator resource was last modified
	"""
	modified: String
	"""
	The canonical URL identifier for this resource.
	"""
	resourceURI: String
	"""
	A set of public web site URLs for the resource.
	"""
	urls: [MarvelUrl!]
	"""
	The url path of to the image related to the creator.
	"""
	thumbnail: String
	"""
	A list of series (Summary Types) related to this creator
	"""
	series: [Summary!]
	"""
	A list of stories (Summary Types) related to this creator
	"""
	stories: [Summary!]
	"""
	A list of comics (Summary Types) related to this creator
	"""
	comics: [Summary!]
	"""
	A list of events (Summary Types) related to this creator
	"""
	events: [Summary!]
}
"""
An event resource within the Marvel Universe
"""
type Event implements MarvelNode {
	"""
	The unique ID of the event resource.
	"""
	id: ID
	"""
	The title of the event.
	"""
	title: String
	"""
	A description of the event.
	"""
	description: String
	"""
	The canonical URL identifier for this resource.
	"""
	resourceURI: String
	"""
	A set of public web site URLs for the resource.
	"""
	urls: [MarvelUrl!]
	"""
	The date the resource was most recently modified.
	"""
	modified: String
	"""
	The date of publication of the first issue in this event.
	"""
	start: String
	"""
	The date of publication of the last issue in this event.
	"""
	end: String
	"""
	The url path of to the image related to the comic.
	"""
	thumbnail: String
	"""
	A list of series (Summary Types) related to this event
	"""
	series: [Summary!]
	"""
	A list of stories (Summary Types) related to this event
	"""
	stories: [Summary!]
	"""
	A list of comics (Summary Types) related to this event
	"""
	comics: [Summary!]
	"""
	A list of characters (Summary Types) related to this event
	"""
	characters: [Summary!]
	"""
	A list of creators (Summary Types) related to this event
	"""
	creators: [Summary!]
	"""
	The next event (Summary Type) in relation to this event
	"""
	next: Summary
	"""
	The previous event (Summary Type) in relation to this event
	"""
	previous: Summary
}

"""
A series resource within the Marvel Universe
"""
type Series implements MarvelNode {
	"""
	The unique ID of the series resource.
	"""
	id: ID
	"""
	The canonical title of the series.
	"""
	title: String
	"""
	A description of the series.
	"""
	description: String
	"""
	The canonical URL identifier for this resource.
	"""
	resourceURI: String
	"""
	A set of public web site URLs for the resource.
	"""
	urls: [MarvelUrl!]
	"""
	The first year of publication for the series.
	"""
	startYear: Int
	"""
	The last year of publication for the series (conventionally, 2099 for ongoing series) .
	"""
	endYear: Int
	"""
	The age-appropriateness rating for the series.
	"""
	rating: String
	"""
	The date the resource was most recently modified.
	"""
	modified: String
	"""
	The url path of to the image related to the comic.
	"""
	thumbnail: String
	"""
	A list of comics (Summary Types) related to this series
	"""
	comics: [Summary!]
	"""
	A list of stories (Summary Types) related to this series
	"""
	stories: [Summary!]
	"""
	A list of events (Summary Types) related to this series
	"""
	events: [Summary!]
	"""
	A list of characters (Summary Types) related to this series
	"""
	characters: [Summary!]
	"""
	A list of creators (Summary Types) related to this series
	"""
	creators: [Summary!]
	"""
	A list of previous series (Summary Types) in relation to this series
	"""
	next: Summary
	"""
	A list of previous series (Summary Types) in relation to this series
	"""
	previous: Summary
}

"""
A stories resource within the Marvel Universe
"""
type Story implements MarvelNode {
	"""
	The unique ID of the story resource.
	"""
	id: ID
	"""
	The story title.
	"""
	title: String
	"""
	A short description of the story.
	"""
	description: String
	"""
	The canonical URL identifier for this resource.
	"""
	resourceURI: String
	"""
	The story type e.g. interior story, cover, text story.
	"""
	type: String
	"""
	The date the resource was most recently modified.
	"""
	modified: String
	"""
	The url path of to the image related to the comic.
	"""
	thumbnail: String
	"""
	A list of comics (Summary Types) related to this story
	"""
	comics: [Summary!]
	"""
	A list of events (Summary Types) related to this story
	"""
	events: [Summary!]
	"""
	A list of characters (Summary Types) related to this story
	"""
	characters: [Summary!]
	"""
	A list of creators (Summary Types) related to this story
	"""
	creators: [Summary!]
	"""
	A list of series (Summary Types) related to this story
	"""
	series: [Summary!]
	"""
	The original comic (Summary Type) with this story
	"""
	originalIssue: Summary
}

"""
An object representing a comic's image.
"""
type ComicImage {
	"""
	A file path to the resources image
	"""
	path: String
	"""
	The file extension for the resource image
	"""
	extension: String
}

"""
An object representing a comic's date.
"""
type ComicDate {
	"""
	A description of the date (e.g. onsale date, FOC date).
	"""
	type: String
	"""
	The date
	"""
	date: String
}

"""
An object representing a comic's price
"""
type ComicPrice {
	"""
	A description of the price (e.g. print price, digital price).
	"""
	type: String
	"""
	The price of the comic resource
	"""
	price: Int
}

"""
An object representing metadata for a resource commonly found within Marvel's Api
"""
type TextObject {
	"""
	The canonical type of the text object (e.g. solicit text, preview text, etc.).
	"""
	type: String
	"""
	The IETF language tag denoting the language the text object is written in.
	"""
	language: String
	"""
	The text.
	"""
	text: String
}

"""
An object representing a url resource commonly found within Marvel's Api
"""
type MarvelUrl {
	"""
	A text identifier for the URL.
	"""
	type: String
	"""
	A full URL (including scheme, domain, and path).
	"""
	url: String
}
